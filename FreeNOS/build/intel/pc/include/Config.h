#ifndef __BUILD_INTEL_PC_INCLUDE_CONFIG_H
#define __BUILD_INTEL_PC_INCLUDE_CONFIG_H

#define VERSION_GET_CODE(a,b,c) (((a) << 16) + ((b) << 8) + (c))
#define DATETIME  __DATE__ " " __TIME__
#define COPYRIGHT "Copyright (C) 2023 Niek Linnenbank\r\n" \
"This is free software; see the source for copying conditions.  There is NO\r\n" \
"warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\r\n"
#define BANNER "FreeNOS " RELEASE " [" ARCH "/" SYSTEM "] (" BUILDUSER "@" BUILDHOST ") (" COMPILER_VERSION ") " DATETIME "\r\n" 
#define SCANNERS ""
#define CONFIGUREDIR "#/.sconf_temp"
#define CONFIGURELOG "#/config.log"
#define CPPSUFFIXES ".c .C .cxx .cpp .c++ .cc .h .H .hxx .hpp .hh .F .fpp .FPP .m .mm .S .spp .SPP .sx "
#define DSUFFIXES ".d "
#define IDLSUFFIXES ".idl .IDL "
#define _LIBFLAGS "${_stripixes(LIBLINKPREFIX, LIBS, LIBLINKSUFFIX, LIBPREFIXES, LIBSUFFIXES, __env__)}"
#define _LIBDIRFLAGS "${_concat(LIBDIRPREFIX, LIBPATH, LIBDIRSUFFIX, __env__, RDirs, TARGET, SOURCE, affect_signature=False)}"
#define _CPPINCFLAGS "${_concat(INCPREFIX, CPPPATH, INCSUFFIX, __env__, RDirs, TARGET, SOURCE, affect_signature=False)}"
#define _CPPDEFFLAGS "${_defines(CPPDEFPREFIX, CPPDEFINES, CPPDEFSUFFIX, __env__, TARGET, SOURCE)}"
#define __SHLIBVERSIONFLAGS "${__lib_either_version_flag(__env__,\"SHLIBVERSION\",\"_APPLELINK_CURRENT_VERSION\", \"_SHLIBVERSIONFLAGS\")}"
#define __LDMODULEVERSIONFLAGS "${__lib_either_version_flag(__env__,\"LDMODULEVERSION\",\"_APPLELINK_CURRENT_VERSION\", \"_LDMODULEVERSIONFLAGS\")}"
#define __DSHLIBVERSIONFLAGS "${__libversionflags(__env__,\"DSHLIBVERSION\",\"_DSHLIBVERSIONFLAGS\")}"
#define TEMPFILEARGJOIN ""
#define PLATFORM "darwin"
#define OBJPREFIX ""
#define OBJSUFFIX ".o"
#define SHOBJPREFIX "$OBJPREFIX"
#define SHOBJSUFFIX ".os"
#define PROGPREFIX ""
#define PROGSUFFIX ""
#define LIBPREFIX "lib"
#define LIBSUFFIX ".a"
#define SHLIBPREFIX "$LIBPREFIX"
#define SHLIBSUFFIX ".dylib"
#define LIBPREFIXES "$LIBPREFIX "
#define LIBSUFFIXES "$LIBSUFFIX $SHLIBSUFFIX "
#define HOST_OS "darwin"
#define HOST_ARCH "x86_64"
#define SHELL "/bin/zsh"
#define TEMPFILEPREFIX "@"
#define MAXLINELENGTH 128072
#define __RPATH "$_RPATH"
#define __DRPATH "$_DRPATH"
#define TOOLPATH "support/scons "
#define TOOLS "default applelink gcc g++ gfortran asm ar dmd m4 filesystem lex yacc rpcgen jar javac javah rmic tar zip textfile phony test default applelink gcc g++ gfortran asm ar dmd m4 filesystem lex yacc rpcgen jar javac javah rmic tar zip textfile bootimage iso binary linn phony strip test lz4 "
#define SHLIBNAME "${_get_shlib_dir}${SHLIBPREFIX}$_get_shlib_stem${_SHLIBSUFFIX}"
#define SHLIB_NOVERSION_SYMLINK "${_get_shlib_dir}${SHLIBPREFIX}$_get_shlib_stem${SHLIBSUFFIX}"
#define SHLIB_SONAME_SYMLINK "${_get_shlib_dir}$_SHLIBSONAME"
#define SHLIBSONAMEFLAGS "-Wl,-soname=$_SHLIBSONAME"
#define _SHLIBVERSION "${SHLIBVERSION and '.'+SHLIBVERSION or ''}"
#define _SHLIBVERSIONFLAGS "$_APPLELINK_CURRENT_VERSION $_APPLELINK_COMPATIBILITY_VERSION"
#define SHLIBEMITTER ""
#define _SHLIBSUFFIX "${_SHLIBVERSION}${SHLIBSUFFIX}"
#define SHLINKCOM "$SHLINK -o $TARGET $SHLINKFLAGS $__SHLIBVERSIONFLAGS $__RPATH $SOURCES $_LIBDIRFLAGS $_LIBFLAGS $_FRAMEWORKPATH $_FRAMEWORKS $FRAMEWORKSFLAGS"
#define SHLINK "$LINK"
#define LDMODULENAME "${LDMODULEPREFIX}$_get_ldmodule_stem${_LDMODULESUFFIX}"
#define LDMODULE_NOVERSION_SYMLINK "$_get_shlib_dir${LDMODULEPREFIX}$_get_ldmodule_stem${LDMODULESUFFIX}"
#define LDMODULE_SONAME_SYMLINK "$_get_shlib_dir$_LDMODULESONAME"
#define _LDMODULEVERSIONFLAGS "$_APPLELINK_CURRENT_VERSION $_APPLELINK_COMPATIBILITY_VERSION"
#define LDMODULEEMITTER ""
#define LDMODULEPREFIX ""
#define _LDMODULESUFFIX "${LDMODULESUFFIX}${_LDMODULEVERSION}"
#define LDMODULESUFFIX ""
#define LDMODULE "$SHLINK"
#define LDMODULECOM "$LDMODULE -o ${TARGET} $LDMODULEFLAGS $SOURCES $_LIBDIRFLAGS $_LIBFLAGS $_FRAMEWORKPATH $_FRAMEWORKS $FRAMEWORKSFLAGS"
#define LDMODULEVERSION "$SHLIBVERSION"
#define LDMODULENOVERSIONSYMLINKS "$SHLIBNOVERSIONSYMLINKS"
#define LINK "$SMARTLINK"
#define LINKFLAGS "-m32 -mtune=i686 -static -nostdlib -nostartfiles -nodefaultlibs -Wl,--gc-sections -T config/intel/pc/user.ld "
#define LINKCOM "$LINK -o $TARGET $LINKFLAGS -Wl,--start-group -lgcc $__RPATH $SOURCES $_LIBDIRFLAGS $_LIBFLAGS -Wl,--end-group"
#define LIBDIRPREFIX "-L"
#define LIBDIRSUFFIX ""
#define LIBLINKPREFIX "-l"
#define LIBLINKSUFFIX ""
#define FRAMEWORKPATHPREFIX "-F"
#define _FRAMEWORKPATH "${_concat(FRAMEWORKPATHPREFIX, FRAMEWORKPATH, \"\", __env__, RDirs)}"
#define _FRAMEWORKS "${_concat(\"-framework \", FRAMEWORKS, \"\", __env__)}"
#define CC "gcc"
#define _CCCOMCOM "$CPPFLAGS $_CPPDEFFLAGS $_CPPINCFLAGS $_FRAMEWORKPATH"
#define CCFLAGS "-m32 -mtune=i686 "
#define CCCOM "$CC -o $TARGET -c $CFLAGS $CCFLAGS $_CCCOMCOM $SOURCES"
#define SHCC "$CC"
#define SHCCCOM "$SHCC -o $TARGET -c $SHCFLAGS $SHCCFLAGS $_CCCOMCOM $SOURCES"
#define CPPDEFPREFIX "-D"
#define CPPDEFSUFFIX ""
#define INCPREFIX "-I"
#define INCSUFFIX ""
#define STATIC_AND_SHARED_OBJECTS_ARE_THE_SAME 0
#define CFILESUFFIX ".c"
#define CCVERSION "15.0.0"
#define CCDEPFLAGS "-MMD -MF ${TARGET}.d"
#define NINJA_DEPFILE_PARSE_FORMAT "gcc"
#define CXX "g++"
#define CXXFLAGS "-m32 -mtune=i686 -Ilib/libstd -include lib/liballoc/Allocator.h "
#define CXXCOM "$CXX -o $TARGET -c $CXXFLAGS $CCFLAGS $_CCCOMCOM $SOURCES"
#define SHCXX "$CXX"
#define SHCXXCOM "$SHCXX -o $TARGET -c $SHCXXFLAGS $SHCCFLAGS $_CCCOMCOM $SOURCES"
#define CXXFILESUFFIX ".cc"
#define CXXVERSION "15.0.0"
#define FORTRANSUFFIXES ".f .for .ftn .fpp .FPP .F .FOR .FTN .f77 .F77 .f90 .F90 .f95 .F95 .f03 .F03 .f08 .F08 "
#define INCFORTRANPREFIX "$INCPREFIX"
#define INCFORTRANSUFFIX "$INCSUFFIX"
#define _FORTRANINCFLAGS "${_concat(INCFORTRANPREFIX, FORTRANPATH, INCFORTRANSUFFIX, __env__, RDirs, TARGET, SOURCE, affect_signature=False)}"
#define FORTRANCOM "$FORTRAN -o $TARGET -c $FORTRANCOMMONFLAGS $FORTRANFLAGS $_FORTRANINCFLAGS $_FORTRANMODFLAG $SOURCES"
#define FORTRANPPCOM "$FORTRAN -o $TARGET -c $FORTRANCOMMONFLAGS $FORTRANFLAGS $CPPFLAGS $_CPPDEFFLAGS $_FORTRANINCFLAGS $_FORTRANMODFLAG $SOURCES"
#define SHFORTRANCOM "$SHFORTRAN -o $TARGET -c $FORTRANCOMMONFLAGS $SHFORTRANFLAGS $_FORTRANINCFLAGS $_FORTRANMODFLAG $SOURCES"
#define SHFORTRANPPCOM "$SHFORTRAN -o $TARGET -c $FORTRANCOMMONFLAGS $SHFORTRANFLAGS $CPPFLAGS $_CPPDEFFLAGS $_FORTRANINCFLAGS $_FORTRANMODFLAG $SOURCES"
#define FORTRANMODPREFIX ""
#define FORTRANMODSUFFIX ".mod"
#define FORTRANMODDIR ""
#define FORTRANMODDIRPREFIX "-J"
#define FORTRANMODDIRSUFFIX ""
#define _FORTRANMODFLAG "$( ${_concat(FORTRANMODDIRPREFIX, FORTRANMODDIR, FORTRANMODDIRSUFFIX, __env__, RDirs, TARGET, SOURCE)} $)"
#define INCF77PREFIX "-I"
#define INCF77SUFFIX ""
#define _F77INCFLAGS "${_concat(INCF77PREFIX, F77PATH, INCF77SUFFIX, __env__, RDirs, TARGET, SOURCE, affect_signature=False)}"
#define F77COM "$F77 -o $TARGET -c $FORTRANCOMMONFLAGS $F77FLAGS $_F77INCFLAGS $SOURCES"
#define F77PPCOM "$F77 -o $TARGET -c $FORTRANCOMMONFLAGS $F77FLAGS $CPPFLAGS $_CPPDEFFLAGS $_F77INCFLAGS $SOURCES"
#define SHF77COM "$SHF77 -o $TARGET -c $FORTRANCOMMONFLAGS $SHF77FLAGS $_F77INCFLAGS $SOURCES"
#define SHF77PPCOM "$SHF77 -o $TARGET -c $FORTRANCOMMONFLAGS $SHF77FLAGS $CPPFLAGS $_CPPDEFFLAGS $_F77INCFLAGS $SOURCES"
#define INCF90PREFIX "-I"
#define INCF90SUFFIX ""
#define _F90INCFLAGS "${_concat(INCF90PREFIX, F90PATH, INCF90SUFFIX, __env__, RDirs, TARGET, SOURCE, affect_signature=False)}"
#define F90COM "$F90 -o $TARGET -c $FORTRANCOMMONFLAGS $F90FLAGS $_F90INCFLAGS $_FORTRANMODFLAG $SOURCES"
#define F90PPCOM "$F90 -o $TARGET -c $FORTRANCOMMONFLAGS $F90FLAGS $CPPFLAGS $_CPPDEFFLAGS $_F90INCFLAGS $_FORTRANMODFLAG $SOURCES"
#define SHF90COM "$SHF90 -o $TARGET -c $FORTRANCOMMONFLAGS $SHF90FLAGS $_F90INCFLAGS $_FORTRANMODFLAG $SOURCES"
#define SHF90PPCOM "$SHF90 -o $TARGET -c $FORTRANCOMMONFLAGS $SHF90FLAGS $CPPFLAGS $_CPPDEFFLAGS $_F90INCFLAGS $_FORTRANMODFLAG $SOURCES"
#define INCF95PREFIX "-I"
#define INCF95SUFFIX ""
#define _F95INCFLAGS "${_concat(INCF95PREFIX, F95PATH, INCF95SUFFIX, __env__, RDirs, TARGET, SOURCE, affect_signature=False)}"
#define F95COM "$F95 -o $TARGET -c $FORTRANCOMMONFLAGS $F95FLAGS $_F95INCFLAGS $_FORTRANMODFLAG $SOURCES"
#define F95PPCOM "$F95 -o $TARGET -c $FORTRANCOMMONFLAGS $F95FLAGS $CPPFLAGS $_CPPDEFFLAGS $_F95INCFLAGS $_FORTRANMODFLAG $SOURCES"
#define SHF95COM "$SHF95 -o $TARGET -c $FORTRANCOMMONFLAGS $SHF95FLAGS $_F95INCFLAGS $_FORTRANMODFLAG $SOURCES"
#define SHF95PPCOM "$SHF95 -o $TARGET -c $FORTRANCOMMONFLAGS $SHF95FLAGS $CPPFLAGS $_CPPDEFFLAGS $_F95INCFLAGS $_FORTRANMODFLAG $SOURCES"
#define INCF03PREFIX "-I"
#define INCF03SUFFIX ""
#define _F03INCFLAGS "${_concat(INCF03PREFIX, F03PATH, INCF03SUFFIX, __env__, RDirs, TARGET, SOURCE, affect_signature=False)}"
#define F03COM "$F03 -o $TARGET -c $FORTRANCOMMONFLAGS $F03FLAGS $_F03INCFLAGS $_FORTRANMODFLAG $SOURCES"
#define F03PPCOM "$F03 -o $TARGET -c $FORTRANCOMMONFLAGS $F03FLAGS $CPPFLAGS $_CPPDEFFLAGS $_F03INCFLAGS $_FORTRANMODFLAG $SOURCES"
#define SHF03COM "$SHF03 -o $TARGET -c $FORTRANCOMMONFLAGS $SHF03FLAGS $_F03INCFLAGS $_FORTRANMODFLAG $SOURCES"
#define SHF03PPCOM "$SHF03 -o $TARGET -c $FORTRANCOMMONFLAGS $SHF03FLAGS $CPPFLAGS $_CPPDEFFLAGS $_F03INCFLAGS $_FORTRANMODFLAG $SOURCES"
#define INCF08PREFIX "-I"
#define INCF08SUFFIX ""
#define _F08INCFLAGS "${_concat(INCF08PREFIX, F08PATH, INCF08SUFFIX, __env__, RDirs, TARGET, SOURCE, affect_signature=False)}"
#define F08COM "$F08 -o $TARGET -c $FORTRANCOMMONFLAGS $F08FLAGS $_F08INCFLAGS $_FORTRANMODFLAG $SOURCES"
#define F08PPCOM "$F08 -o $TARGET -c $FORTRANCOMMONFLAGS $F08FLAGS $CPPFLAGS $_CPPDEFFLAGS $_F08INCFLAGS $_FORTRANMODFLAG $SOURCES"
#define SHF08COM "$SHF08 -o $TARGET -c $FORTRANCOMMONFLAGS $SHF08FLAGS $_F08INCFLAGS $_FORTRANMODFLAG $SOURCES"
#define SHF08PPCOM "$SHF08 -o $TARGET -c $FORTRANCOMMONFLAGS $SHF08FLAGS $CPPFLAGS $_CPPDEFFLAGS $_F08INCFLAGS $_FORTRANMODFLAG $SOURCES"
#define FORTRAN "f77"
#define SHFORTRAN "$FORTRAN"
#define F77 "gfortran"
#define SHF77 "$F77"
#define F90 "gfortran"
#define SHF90 "$F90"
#define F95 "gfortran"
#define SHF95 "$F95"
#define F03 "gfortran"
#define SHF03 "$F03"
#define F08 "gfortran"
#define SHF08 "$F08"
#define AS "gcc"
#define ASFLAGS "-m32 -mtune=i686 -Wall -nostdinc "
#define ASCOM "$AS $ASFLAGS -o $TARGET $SOURCES"
#define ASPPFLAGS "$ASFLAGS"
#define ASPPCOM "$CC $ASPPFLAGS $CPPFLAGS $_CPPDEFFLAGS $_CPPINCFLAGS -c -o $TARGET $SOURCES"
#define AR "ar"
#define ARCOM "$AR $ARFLAGS $TARGET $SOURCES"
#define RANLIB "ranlib"
#define RANLIBCOM "$RANLIB $RANLIBFLAGS $TARGET"
#define DC "dmd"
#define DCOM "$DC $_DINCFLAGS $_DVERFLAGS $_DDEBUGFLAGS $_DFLAGS -c -of$TARGET $SOURCES"
#define _DINCFLAGS "${_concat(DINCPREFIX, DPATH, DINCSUFFIX, __env__, RDirs, TARGET, SOURCE)}"
#define _DVERFLAGS "${_concat(DVERPREFIX, DVERSIONS, DVERSUFFIX, __env__)}"
#define _DDEBUGFLAGS "${_concat(DDEBUGPREFIX, DDEBUG, DDEBUGSUFFIX, __env__)}"
#define _DFLAGS "${_concat(DFLAGPREFIX, DFLAGS, DFLAGSUFFIX, __env__)}"
#define SHDC "$DC"
#define SHDCOM "$DC $_DINCFLAGS $_DVERFLAGS $_DDEBUGFLAGS $_DFLAGS -c -fPIC -of$TARGET $SOURCES"
#define DPATH "#/ "
#define DFLAGS ""
#define DVERSIONS ""
#define DDEBUG ""
#define DINCPREFIX "-I"
#define DINCSUFFIX ""
#define DVERPREFIX "-version="
#define DVERSUFFIX ""
#define DDEBUGPREFIX "-debug="
#define DDEBUGSUFFIX ""
#define DFLAGPREFIX "-"
#define DFLAGSUFFIX ""
#define DFILESUFFIX ".d"
#define DLINK "$DC"
#define DLINKCOM "$DLINK -of$TARGET $DLINKFLAGS $__DRPATH $SOURCES $_DLIBDIRFLAGS $_DLIBFLAGS"
#define SHDLINK "$DC"
#define SHDLINKCOM "$DLINK -of$TARGET $SHDLINKFLAGS $__SHDLIBVERSIONFLAGS $__DRPATH $SOURCES $_DLIBDIRFLAGS $_DLIBFLAGS"
#define DLIBLINKPREFIX "-L-l"
#define DLIBLINKSUFFIX ""
#define _DLIBFLAGS "${_stripixes(DLIBLINKPREFIX, LIBS, DLIBLINKSUFFIX, LIBPREFIXES, LIBSUFFIXES,  __env__)}"
#define DLIBDIRPREFIX "-L-L"
#define DLIBDIRSUFFIX ""
#define _DLIBDIRFLAGS "${_concat(DLIBDIRPREFIX, LIBPATH, DLIBDIRSUFFIX, __env__, RDirs, TARGET, SOURCE)}"
#define DLIB "ar cr"
#define DLIBCOM "$DLIB $_DLIBFLAGS $TARGET $SOURCES $_DLIBFLAGS"
#define DLIBFLAGPREFIX "-"
#define DLIBFLAGSUFFIX ""
#define DRPATHPREFIX "-L-rpath,"
#define DRPATHSUFFIX ""
#define _DRPATH "${_concat(DRPATHPREFIX, RPATH, DRPATHSUFFIX, __env__)}"
#define _SHDLIBVERSIONFLAGS "$SHDLIBVERSIONFLAGS -L-soname=$_SHLIBSONAME"
#define M4 "m4"
#define M4COM "cd ${SOURCE.rsrcdir} && $M4 $M4FLAGS < ${SOURCE.file} > ${TARGET.abspath}"
#define COPYSTR "Copy file(s): \"$SOURCES\" to \"$TARGETS\""
#define LEX "flex"
#define LEX_HEADER_FILE ""
#define LEX_TABLES_FILE ""
#define LEXCOM "$LEX $LEXFLAGS $_LEX_HEADER $_LEX_TABLES -t $SOURCES > $TARGET"
#define _LEX_HEADER "${LEX_HEADER_FILE and \"--header-file=\" + str(LEX_HEADER_FILE)}"
#define _LEX_TABLES "${LEX_TABLES_FILE and \"--tables-file=\" + str(LEX_TABLES_FILE)}"
#define YACC "bison"
#define YACC_HEADER_FILE ""
#define YACC_GRAPH_FILE ""
#define YACCCOM "$YACC $YACCFLAGS $_YACC_HEADER $_YACC_GRAPH -o $TARGET $SOURCES"
#define YACCHFILESUFFIX ".h"
#define YACCHXXFILESUFFIX ".hpp"
#define YACCVCGFILESUFFIX ".vcg"
#define _YACC_HEADER "${YACC_HEADER_FILE and \"--header=\" + str(YACC_HEADER_FILE)}"
#define _YACC_GRAPH "${YACC_GRAPH_FILE and \"--graph=\" + str(YACC_GRAPH_FILE)}"
#define RPCGEN "rpcgen"
#define JAVASUFFIX ".java"
#define JAR "jar"
#define _JARCOM "$JAR $_JARFLAGS $TARGET $_JARMANIFEST $_JARSOURCES"
#define JARCOM "${TEMPFILE('$_JARCOM','$JARCOMSTR')}"
#define JARSUFFIX ".jar"
#define JAVAC "javac"
#define JAVAINCLUDES "/System/Library/Frameworks/JavaVM.framework/Headers/ "
#define JAVACLASSSUFFIX ".class"
#define JAVABOOTCLASSPATH ""
#define JAVACLASSPATH ""
#define JAVASOURCEPATH ""
#define JAVAPROCESSORPATH ""
#define _JAVABOOTCLASSPATH "${_javapathopt(\"-bootclasspath\", \"JAVABOOTCLASSPATH\")}"
#define _JAVAPROCESSORPATH "${_javapathopt(\"-processorpath\", \"JAVAPROCESSORPATH\")}"
#define _JAVACLASSPATH "${_javapathopt(\"-classpath\", \"JAVACLASSPATH\")}"
#define _JAVASOURCEPATH "${_javapathopt(\"-sourcepath\", \"JAVASOURCEPATH\", \"_JAVASOURCEPATHDEFAULT\")}"
#define _JAVASOURCEPATHDEFAULT "${TARGET.attributes.java_sourcedir}"
#define _JAVACCOM "$JAVAC $JAVACFLAGS $_JAVABOOTCLASSPATH $_JAVAPROCESSORPATH $_JAVACLASSPATH -d ${TARGET.attributes.java_classdir} $_JAVASOURCEPATH $SOURCES"
#define JAVACCOM "${TEMPFILE('$_JAVACCOM','$JAVACCOMSTR')}"
#define JAVAH "javah"
#define JAVAHCOM "$JAVAH $JAVAHFLAGS $_JAVAHOUTFLAG $_JAVAHCLASSPATH ${SOURCES.attributes.java_classname}"
#define RMIC "rmic"
#define RMICCOM "$RMIC $RMICFLAGS -d ${TARGET.attributes.java_lookupdir} -classpath ${SOURCE.attributes.java_classdir} ${SOURCES.attributes.java_classname}"
#define TAR "tar"
#define TARCOM "$TAR $TARFLAGS -f $TARGET $SOURCES"
#define TARSUFFIX ".tar"
#define ZIP "zip"
#define ZIPCOMPRESSION 8
#define ZIPSUFFIX ".zip"
#define LINESEPARATOR ""
#define TEXTFILEPREFIX ""
#define TEXTFILESUFFIX ".txt"
#define SUBSTFILEPREFIX ""
#define SUBSTFILESUFFIX ""
#define FILE_ENCODING "utf-8"
#define ROOTFS "#${BUILDROOT}/rootfs"
#define ROOTFS_FILES ""
#define BIN "${ROOTFS}/bin"
#define ETC "${ROOTFS}/etc"
#define SERVER "${ROOTFS}/server"
#define BOOT "${ROOTFS}/boot"
#define QEMU "qemu-system-i386"
#define QEMUCMD "${QEMU} ${QEMUFLAGS}"
#define QEMUFLAGS "-smp 4 -m 256"
#define MALLOCNANOZONE 0
#define USER "minjung"
#define COMMAND_MODE "unix2003"
#define __CFBUNDLEIDENTIFIER "com.microsoft.VSCode"
#define PATH "/Users/minjung/.nvm/versions/node/v19.3.0/bin:/Users/minjung/anaconda3/bin:/Users/minjung/anaconda3/condabin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/Applications/VMware Fusion.app/Contents/Public:/Users/minjung/Applications/flutter/bin:/Users/minjung/.rvm/bin"
#define LOGNAME "minjung"
#define SSH_AUTH_SOCK "/private/tmp/com.apple.launchd.dVpJOT58JZ/Listeners"
#define HOME "/Users/minjung"
#define TMPDIR "/var/folders/62/07k8g17d729076w2q44hfbr80000gn/T/"
#define __CF_USER_TEXT_ENCODING "0x1F5:0x0:0x0"
#define XPC_SERVICE_NAME 0
#define XPC_FLAGS "0x0"
#define ORIGINAL_XDG_CURRENT_DESKTOP "undefined"
#define TERM_PROGRAM "vscode"
#define TERM_PROGRAM_VERSION "1.74.2"
#define LANG "en_US.UTF-8"
#define COLORTERM "truecolor"
#define GIT_ASKPASS "/private/var/folders/62/07k8g17d729076w2q44hfbr80000gn/T/AppTranslocation/A568FCFF-8F62-40A5-BE0B-8AF48518495E/d/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh"
#define VSCODE_GIT_ASKPASS_NODE "/private/var/folders/62/07k8g17d729076w2q44hfbr80000gn/T/AppTranslocation/A568FCFF-8F62-40A5-BE0B-8AF48518495E/d/Visual Studio Code.app/Contents/Frameworks/Code Helper.app/Contents/MacOS/Code Helper"
#define VSCODE_GIT_ASKPASS_EXTRA_ARGS "--ms-enable-electron-run-as-node"
#define VSCODE_GIT_ASKPASS_MAIN "/private/var/folders/62/07k8g17d729076w2q44hfbr80000gn/T/AppTranslocation/A568FCFF-8F62-40A5-BE0B-8AF48518495E/d/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js"
#define VSCODE_GIT_IPC_HANDLE "/var/folders/62/07k8g17d729076w2q44hfbr80000gn/T/vscode-git-a0e16987b5.sock"
#define VSCODE_INJECTION 1
#define ZDOTDIR "/Users/minjung"
#define USER_ZDOTDIR "/Users/minjung"
#define TERM "xterm-256color"
#define SHLVL 1
#define CONDA_EXE "/Users/minjung/anaconda3/bin/conda"
#define _CE_M ""
#define _CE_CONDA ""
#define CONDA_PYTHON_EXE "/Users/minjung/anaconda3/bin/python"
#define CONDA_SHLVL 1
#define CONDA_PREFIX "/Users/minjung/anaconda3"
#define CONDA_DEFAULT_ENV "base"
#define CONDA_PROMPT_MODIFIER "(base)"
#define NVM_DIR "/Users/minjung/.nvm"
#define NVM_CD_FLAGS "-q"
#define NVM_BIN "/Users/minjung/.nvm/versions/node/v19.3.0/bin"
#define NVM_INC "/Users/minjung/.nvm/versions/node/v19.3.0/include/node"
#define RVM_PREFIX "/Users/minjung"
#define RVM_PATH "/Users/minjung/.rvm"
#define RVM_BIN_PATH "/Users/minjung/.rvm/bin"
#define RVM_VERSION "1.29.12-next (master)"
#define RVM_ALIAS_EXPANDED ""
#define RVM_BIN_FLAG ""
#define RVM_DOCS_TYPE ""
#define RVM_GEMSTONE_PACKAGE_FILE ""
#define RVM_GEMSTONE_URL ""
#define RVM_NICENESS ""
#define RVM_NIGHTLY_FLAG ""
#define RVM_ONLY_PATH_FLAG ""
#define RVM_PRETTY_PRINT_FLAG ""
#define RVM_PROXY ""
#define RVM_QUIET_FLAG ""
#define RVM_RUBY_BITS ""
#define RVM_RUBY_FILE ""
#define RVM_RUBY_MAKE ""
#define RVM_RUBY_MAKE_INSTALL ""
#define RVM_RUBY_MODE ""
#define RVM_SCRIPT_NAME ""
#define RVM_SDK ""
#define RVM_SILENT_FLAG ""
#define RVM_USE_FLAG ""
#define RVM_HOOK ""
#define _ "/usr/local/bin/scons"
#define ARCH "intel"
#define SYSTEM "pc"
#define COMPILER "gcc"
#define BUILDROOT "build/intel/pc"
#define VERSION_EXTRA ""
#define CROSS_COMPILE ""
#define VERSION_SUFFIX ""
#define LD "gcc"
#define ARCHFLAGS "-m32 -mtune=i686 "
#define _CCFLAGS "-Wall -Wextra -nostdinc -fno-stack-protector -fno-builtin -fno-pie -Wno-write-strings -Wno-unused-parameter -Wno-ignored-qualifiers -Wno-pragmas -Wno-cast-function-type -Wno-format-truncation -g3 -O0 -D__ASSERT__ "
#define _CXXFLAGS "-fno-rtti -fno-exceptions -fno-sized-deallocation -Wno-unknown-pragmas -std=c++03 -ffunction-sections "
#define CPPPATH "#build/${ARCH}/${SYSTEM}/include #kernel "
#define LINKUSER "-T config/intel/pc/user.ld "
#define LINKKERN "-T config/intel/pc/kernel.ld "
#define LINKEXTRA ""
#define STRIP "strip"
#define OBJCOPY "objcopy"
#define VERSION "1.0.3"
#define VERSIONCODE 65539
#define RELEASE "1.0.3-git(e3d5cc3)*"
#define FREENOS 1
#define COMPILER_VERSION "Apple clang version 15.0.0 (clang-1500.0.40.1)"
#define BUILDUSER "minjung"
#define BUILDHOST "Mins-MBP.lan"
#define BUILDOS "Darwin 23.0.0"
#define BUILDARCH "x86_64"
#define BUILDPY "Python 3.11.5"
#define BUILDER "SCons 4.5.2"
#define BUILDURL "/Users/minjung/Programs/CS3750/Project2_FreeNOS/FreeNOS"
#define BUILDPATH "/Users/minjung/Programs/CS3750/Project2_FreeNOS/FreeNOS"
#define TESTROOT ""
#endif

